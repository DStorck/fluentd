apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "fluentd.fullname" . }}
  labels:
    app: {{ template "fluentd.name" . }}
    chart: {{ template "fluentd.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fluentd.name" . }}
      release: {{ .Release.Name }}
  {{- if .Values.persistence.enabled }}
  strategy:
    type: Recreate
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "fluentd.name" . }}
        release: {{ .Release.Name }}
    spec:
{{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.image.pullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
{{- end }}
      # initContainers: 
      # - name: plugin-install
      #   image: gcr.io/google-containers/fluentd-elasticsearch:v2.3.1
      #   imagePullPolicy: IfNotPresent
      #   command:  ["fluent-gem", "install", "fluent-plugin-s3"]
      #   volumeMounts:
      #   - mountPath: /etc/fluent/plugins
      #     name: plugindir
      containers:
      - name: {{ .Chart.Name }}
        # image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        image: quay.io/dstorck/fluentd-s3
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          # - name: OUTPUT_HOST
          #   value: {{ .Values.output.host | quote }}
          # - name: OUTPUT_PORT
          #   value: {{ .Values.output.port | quote }}
          - name: OUTPUT_BUFFER_CHUNK_LIMIT
            value: {{ .Values.output.buffer_chunk_limit | quote }}
          - name: OUTPUT_BUFFER_QUEUE_LIMIT
            value: {{ .Values.output.buffer_queue_limit | quote }}
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: {{ .Values.output.host | quote }}
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: {{ .Values.output.port | quote }}
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          - name: FLUENT_ELASTICSEARCH_USER
            value: {{ .Values.fluentESUser | quote }}
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: {{ .Values.fluentESPassword | quote }}
          - name: S3_BUCKET 
            value: {{ .Values.s3Bucket }}
          - name: S3_REGION 
            value: {{ .Values.s3Region }}
          - name: AWS_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "fluentd.fullname" . }}-auth
                key: awsSecKey
          - name: AWS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ template "fluentd.fullname" . }}-auth
                key: awsKeyId
          {{- range $key, $value := .Values.env }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        ports:
{{- range $port := .Values.service.ports }}
          - name: {{ $port.name }}
            containerPort: {{ $port.containerPort }}
            protocol: {{ $port.protocol }}
{{- end }}
          - name: http-input
            containerPort: 9880
            protocol: TCP
        # livenessProbe:
        #   httpGet:
        #     # Use percent encoding for query param.
        #     # The value is {"log": "health check"}.
        #     # the endpoint itself results in a new fluentd
        #     # tag 'fluentd.pod-healthcheck'
        #     path: /fluentd.pod.healthcheck?json=%7B%22log%22%3A+%22health+check%22%7D
        #     port: 9880
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 1
        volumeMounts:
        - name: config-volume-{{ template "fluentd.fullname" . }}
          mountPath: /etc/fluent/config.d
        - name: buffer
          mountPath: "/var/log/fluentd-buffers"
      volumes:
        - name: config-volume-{{ template "fluentd.fullname" . }}
          configMap:
            name: {{ template "fluentd.fullname" . }}
        - name: buffer
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "fluentd.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}