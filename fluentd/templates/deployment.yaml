apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "fluentd.fullname" . }}
  labels:
    app: {{ template "fluentd.name" . }}
    chart: {{ template "fluentd.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fluentd.name" . }}
      release: {{ .Release.Name }}
  {{- if .Values.persistence.enabled }}
  strategy:
    type: Recreate
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "fluentd.name" . }}
        release: {{ .Release.Name }}
    spec:
{{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.image.pullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["/bin/bash", "-c", "fluent-gem install fluent-plugin-s3; /run.sh"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: OUTPUT_BUFFER_CHUNK_LIMIT
            value: {{ .Values.output.buffer_chunk_limit | quote }}
          - name: OUTPUT_BUFFER_QUEUE_LIMIT
            value: {{ .Values.output.buffer_queue_limit | quote }}
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: {{ .Values.output.host | quote }}
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: {{ .Values.output.port | quote }}
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: {{ .Values.output.scheme | quote }}
          - name: FLUENT_ELASTICSEARCH_USER
            value: {{ .Values.fluentESUser | quote }}
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: {{ .Values.fluentESPassword | quote }}
          - name: S3_BUCKET 
            value: {{ .Values.s3Bucket }}
          - name: S3_REGION 
            value: {{ .Values.s3Region }}
          - name: AWS_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "fluentd.fullname" . }}-auth
                key: awsSecKey
          - name: AWS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ template "fluentd.fullname" . }}-auth
                key: awsKeyId
          {{- range $key, $value := .Values.env }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        ports:
{{- range $port := .Values.service.ports }}
          - name: {{ $port.name }}
            containerPort: {{ $port.containerPort }}
            protocol: {{ $port.protocol }}
{{- end }}
          - name: http-input
            containerPort: 9880
            protocol: TCP
        volumeMounts:
        - name: config-volume-{{ template "fluentd.fullname" . }}
          mountPath: /etc/fluent/config.d
        - name: buffer
          mountPath: "/var/log/fluentd-buffers"
      volumes: 
        - name: config-volume-{{ template "fluentd.fullname" . }}
          configMap:
            name: {{ template "fluentd.fullname" . }}
        - name: buffer
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "fluentd.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}